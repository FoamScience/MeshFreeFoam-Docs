[{"body":"There are basically three main issues:\nDocumenting C++20 (specifically: concepts) At the time of writing, Hyde doesn’t support C++ concepts yet, which I plan to use extensively. The code still compiles (because clang can compile it) but Hyde ignores require statements. Its reaction to concept declarations isn’t tested.\nThe current behavior is that require does not show up in the declaration:\ntemplate \u003cstd::regular T\u003e class myClass; simply appears in the API docs as:\ntemplate \u003cclass T\u003e class myClass; which is a lot more generic and may not give a precise idea on what’s going on. It’s flat out wrong.\nAt the time of writing, I can live with this though. The OpenFOAM fork needs to compile with clang Basically, any dependency code you rely on, as well as your own libraries, need to compile with clang. Foam-Extend, for example, doesn’t, since clang thinks some calls to operators between tmp objects are unambiguous.\nAlso, even with the forks which mostly compile with clang, they frequently use [[deprecated]] to make the compiler mark functions and methods as deprecated. But, they do not maintain the inline docs to match the deprecated docs.\nHyde actually sets compiler deprecation warnings as errors by default. We have to skip this step, and as a result we lose the automatic synchronization between code and API docs.\nLinking to actual source files Personally I don’t like to link API docs to actual source files, but it can be useful to those who don’t spend as much time in a CLI environment. I still think It’s the job of your IDE to show where stuff are, and to show you the documentation too though.\nHyde can generate source file relationships if we add -hyde-src-root to the call but this clutters the left sidebar with unwanted content; I process resulting markdown files with a Python script afterwards to minimize the clutter.\nBecause Hyde processes the expanded AST of C++ files, it doesn’t report line numbers for declarations and definitions for now.\nRecap The whole system can crumble very easily. And it might not even be your fault, so you couldn’t fix it! But while it works, it works marvelously well! Plus, it’s an opportunity for me to learn new things (Compiler AST, for example?).\n","categories":"","description":"While planning on how to best document my PhD projects, this is my vision for the best approach focusing on easy-to-update docs and decent-looking web pages.\n","excerpt":"While planning on how to best document my PhD projects, this is my …","ref":"/blog/2023/08/18/the-very-first-issues-i-ran-into-with-this-documentation-project/","tags":["documentation","c++","hyde"],"title":"The very first issues I ran into with this documentation project"},{"body":" Note If you write OpenFOAM code with C++17 and up; you may want to help supporting the\nnew constructs by PRing to Hyde! This page is basically a recap of what would be a user-guide on how to use this website\nto generate your own docs.\nWhat is this? We rely on Hugo static site generator to build HTML docs we get from\nHyde. This allows us to host such websites for free on\nmultiple platforms (Github Pages being our target).\nThe promise is that you will only have to write your docs in Markdown syntax, and you get\nautomatic updates for your docs as your code changes.\nWe cannot supported full up-to-date states of the docs specifically because OpenFOAM\ncode does not respect this. If they mark methods with [[deprecated]], this is supposed\nto be reflected in the docs but it is not yet enforced in most OpenFOAM forks! Why do I want it? Help your user know if your project will help them. Useful information can include:\nWhat is it good for?: What types of problems does your project solve? What are the benefits of using it?\nWhat is it not good for?: For example, point out situations that might intuitively seem suited for your project, but aren’t for some reason. Also mention known limitations, scaling issues, or anything else that might let your users know if the project is not for them.\nWhat is it not yet good for?: Highlight any useful features that are coming soon.\nWhere should I go next? Give your users next steps from the Overview. For example:\nGetting Started: Get started with $project Examples: Check out some example code! ","categories":"","description":"Here's where you finds out if this project is for you","excerpt":"Here's where you finds out if this project is for you","ref":"/docs/overview/","tags":"","title":"Overview"},{"body":"Dependency management is always a hustle. For my PhD project, I would need to live through this hell for around three years. Specifically, OpenFOAM libraries are dependencies for me and that is a big deal for few reasons:\nWhich OpenFOAM fork to use? OpenFOAM forks from OpenCFD and Foundation are changing too quickly and Foam-Extend practically gets too little updates. My customizations will not fit as changes upstream OpenFOAM maintainers would be interested in merging; simply because they are mostly “experimentation” and maybe meshless-specific. I only need a very small set of OpenFOAM libraries to start and I don’t see a way to efficiently leverage the full set of libraries because most of them are optimized for FVM. This practically applies to any library that is hard to merge my changes into and gets frequent updates.\nDependency management workflow The workflow to manage my dependencies revolves around the following concepts:\nHave a central repository for all dependencies in case I change stuff in their code. Include that repo as a submodule/subtree in the main project. Customizing the dependency code should be as streamlined as possible, without losing the ability to pull changes from upstream repos. How to make OpenFOAM libs available as dependencies There are scripts to automatize this process, but I will explain the most important steps here:\nWe start by cloning the project, filtering the paths we need, then tagging the state as original (You’ll need git-filter-repo for this).\ngit clone https://develop.openfoam.com/Development/openfoam /tmp/openfoam-scratch cd /tmp/openfoam-scratch git filter-repo --path COPYING --path Allwmake --path bin --path etc --path src/Allwmake \\ --path src/OSspecific --path src/OpenFOAM --path src/Pstream/ \\ --path META-INFO/ --path wmake --force Next, in the dependencies repo, add this as a subtree, and make a branch for original OpenFOAM commits:\ncd /path/to/repo/root git subtree add --prefix dependencies/meshfree-openfoam /tmp/openfoam-scratch/ master git checkout -b original-openfoam Switch back to master, and commit the custom changes we need:\ngit checkout master git add -A git commit -m \"Update OpenFOAM compilation\" Updates from the original repo come in two forms:\nNew change commits. These may cause conflicts with our changes, so rebasing will allow us to solve them. New libraries we want to add. These are also new commits, but we know they won’t cause trouble since they only add files to original. We only have to remember to update Allwmake scripts to compile those new libraries. Here is how to add src/fileFormats and src/surfMesh libraries from OpenFOAM:\n# Create a new filtered repo with the new libs rm -rf /tmp/openfoam-scratch git clone https://develop.openfoam.com/Development/openfoam /tmp/openfoam-scratch cd /tmp/openfoam-scratch git filter-repo --path COPYING --path Allwmake --path bin --path etc --path src/Allwmake \\ --path src/OSspecific --path src/OpenFOAM --path src/Pstream/ \\ --path META-INFO/ --path wmake --path src/fileFormats --path src/surfMesh --force # Merge those commits into master cd /path/to/repo/root git checkout original-openfoam git subtree pull --prefix dependencies/meshfree-openfoam /tmp/openfoam-scratch/ master git checkout master # This merge has less chance of producing conflicts if you're just adding libs. git merge original-openfoam # On master, don't forget to update Allwmake to compile the new libs if necessary This workflow maintains a healthy level of consistency and makes it easy to experiment with dependency library modifications (e.g. Optimization for GPU, …, etc) and even changing compiler settings.\n","categories":"","description":"During the design phase of `MeshFreeFoam`, It was obvious that I would need to rely on few c++ libraries. So, I came up with a workflow to manage those dependencies atomically and automatically, where I could get dependency updates effortlessly and still keep my customizations if any.\n","excerpt":"During the design phase of `MeshFreeFoam`, It was obvious that I would …","ref":"/blog/2023/08/18/managing-dependency-software-for-meshfreefoam/","tags":["meshfreeFoam","c++","dependency","git"],"title":"Managing dependency software for `meshfreeFoam`"},{"body":"Prerequisites This fork of Hyde An Extended Hugo version jq mdformat with mdformat-frontmatter python-frontmatter Your OpenFOAM libraries; with compile_commands.json files generated in each library directory.\nAn example source directory is here Clone this repository and cd into it. Generate API documentation Do:\n# These paths need to be absolute ./scripts/generate-docs.sh $PWD/code $PWD/content/en/api That’s all; you’ll find your API docs as markdown files in content/en/api.\nYou can add content to them manually. The next time you run this command (hopefully on next\ncommit), the manual content will not be overwritten but the front matter will be updated.\nIt might not be this easy for your own code. What this actually does is to try and partially compile your code\nwith clang to figure out the AST of your code.\nFor it to work, your code needs to compile with clang.\nThis repository provides example API documentation of the libraries in code folder.\nYou can access it through the main menu at the top right corner.\nMake sure the user guide is still up to date The Markdown files in content/en/docs count as a user guide. On every commit, remember to check\nif information there needs to be changed!\nTo make sure you understand the structure of the docs, we’ve setup two top level pages:\nOverview Getting Started But the latter has a sub-page (Example Page) which you can reach from the left sidebar\nor the navigation buttons at the bottom of the page.\nWrite a blog entry Did working on this commit make you learn something new? Write a blog entry about it at\ncontent/en/blog!\n","categories":["Examples"],"description":"What do I need to know to try things out?","excerpt":"What do I need to know to try things out?","ref":"/docs/getting-started/","tags":["docs"],"title":"Getting Started"},{"body":"A few design goals govern how MeshFreeFoam shapes are implemented, the most important ones being:\nSupport for dynamically loaded models, starting from STL files\nSupport for basic geometric operations (adding, subtracting, scaling, rotating, …, etc.)\nSupport for physics on boundary patches as well as easy MPI comms\nCustomizable boundary filler. Supporting both single-layer and multi-layer filling\nCustomizable rho-based inner fillers.\nAlso, shape classes store no actual grid data to ease up geometric operations. Dedicated mesh classes will store point coordinates in a hierarchical manner.\ngraph LR grid -- as baseShape --\u003e region1 grid -- as baseShape --\u003e region2 region1 --\u003e boundaries1 region1 --\u003e interface region2 --\u003e interface region2 --\u003e boundaries2 boundaries1 -.- grid boundaries2 -.- grid interface -.- grid innerFiller o--o grid boundaries1 \u0026 boundaries2 \u0026 interface o--o boundaryFiller Boundary treatment At first, only single-layer boundary layers are implemented. Shapes only read in the boundary’s interface type. These should be similar to OpenFOAM boundary patches\nAt the time of writing, few boundary types are planned:\nfixedWall for stationary walls. elasticWall for “elastic” surfaces. freeSurface for free surface interfaces. mixedBoundary for mixed Neumann-Dirichlet boundary conditions. genericBoundary for arbitrary transport PDE solving on the boundary. PDE’s are aggregated to be solved later implicitly with the whole system. From this, here is a list of requirements on boundary patches:\nAwareness of how many sides (1 or 2). Second side can be imaginary if at the processor’s boundary. Access to the equation operator classes, hence this may result in circular dependency. Access to neighboring inner grid points and data. ","categories":"","description":"Fixing the principles and goals behind designing the `shapes` part of `meshfreeFoam` library.\n","excerpt":"Fixing the principles and goals behind designing the `shapes` part of …","ref":"/blog/2023/08/23/design-of-domain-shapes/","tags":["c++"],"title":"Design of domain shapes"},{"body":"In short, I’ll stick with OpenFOAM’s way of doing things when it comes:\nRunTime Selection of models The plugin system (Function Objects) Issue 01: Dependency on the OpenFOAM version I have decided to run with the master branch from OpenCFD’s OpenFOAM and the very first I encounter is that the RunTime selection mechanism has changed somewhen between v2012 and v2306. Not cool.\nSo, my solution is to have my own macros for runtime selection but, in the end, they need to be compatible with the version I compile my toolkit with. This is exactly why dependency management will be a challenge on its own.\nIssue 02: Going too far with OOD and effects on GPU optimization When I look at all public projects which are optimizing for GPU offloading (Here is an example) there seems to be no tolerance for virtual methods. Actually, NVIDIA explicitly advises to move away from object oriented design.\nWhile this is not an option for as, the plan is to have two modes:\nOne mode employing the standard way of doing things in OpenFOAM in terms of RTS A second mode which either leverages dynamicMesh or some kind of JIT compiler to generate de-virtualized code at runtime. ","categories":"","description":"Extensibility of the framework is vital to its success and runtime selection is very important. Here, I discuss the approach taken for runtime selection.\n","excerpt":"Extensibility of the framework is vital to its success and runtime …","ref":"/blog/2023/08/28/runtime-selection-mechanism-for-meshfreefoam/","tags":["c++","openfoam"],"title":"Runtime selection mechanism for `MeshFreeFoam`"},{"body":"Well, there are three clear objects for unit testing:\nMaking sure new code does not break older functionality Making sure new functionality works as expected Making sure important dependency APIs have not changed without us noticing To this end, I originally crafted the foamUT toolkit to unit-test OpenFOAM code in a streamlined way. All that is needed is to write by-library tests and supply the appropriate Make/files and Make/options files to compile them. Example tests are provided in the MeshFreeFoam repository.\nUnit tests marvelously demonstrate usage of different code entities so I thought we would add them to the documentation website. Head to tests to browse all unit tests and see their latest states.\nCurrently, this feature relies on parsing Catch2 XML reports and I doubt this will change. Of course, at this point,\nI’m only supporting simple test case reports. I’ll expand as I go.\n","categories":"","description":"During the development of `MeshFreeFoam`, testing new and old functionality is crucial to maintain the code quality. This post discusses my approach for test-proof the framework\n","excerpt":"During the development of `MeshFreeFoam`, testing new and old …","ref":"/blog/2023/08/29/introducing-unit-tests-with-foamut/","tags":["c++","openfoam"],"title":"Introducing unit tests with foamUT"},{"body":"KdTree and radius-based searches After sweeping the existing C++ libraries capable of doing k-nearest neighbor (KNN) search with unsorted radius queries, I have reached the conclusion of using nanoflann as a backend for such searches.\nTheir API is nice and easy to use but with one specific caveat: The dynamic KdTree is not trivial to use. After putting up some unit tests to the KdTree wrapper, I quickly discovered that changing the list of point positions we perform searches against is not fun. My current solution is to hash the current content of the list and check it again on each KNN search!\nIf the list of points has been radically changed, the KdTree index will be invalid; so we need to reset it. But, if the list is only being appended to (no changes to old elements), the new points are added to the index.\nAt this point, I have mainly three unanswered question:\nHow efficient is to hash the point list? How efficient OpenFOAM’s implementation of Jenkins hasher is? How efficient is to reset the KdTree index (compared to remove all points and add add the new ones)? ","categories":"","description":"At the very stages of developing MeshFreeFoam, the focus was on getting things done quickly, however, opportunities for optimization were not left alone. This post is a compilation of the probable areas that would need optimizing for performance in the futute.\n","excerpt":"At the very stages of developing MeshFreeFoam, the focus was on …","ref":"/blog/2023/08/29/optimization-notes-part-1/","tags":["c++","openfoam"],"title":"Optimization notes: Part 1"},{"body":"","categories":"","description":"","excerpt":"","ref":"/blog/discussions/","tags":"","title":"Discussions"},{"body":"This section is where the “user documentation” lives - all the\ninformation users need to understand and successfully use the project.\nSo, here it is. You can already start with the Overview:\n","categories":"","description":"","excerpt":"This section is where the “user documentation” lives - all the …","ref":"/docs/","tags":"","title":"Documentation"},{"body":"","categories":"","description":"","excerpt":"","ref":"/blog/news/","tags":"","title":"News"},{"body":"","categories":"","description":"","excerpt":"","ref":"/blog/releases/","tags":"","title":"Releases"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/c++/","tags":"","title":"c++"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/openfoam/","tags":"","title":"openfoam"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"},{"body":"Initial work on the companion website project for documenting the design and implementation\nof my PhD project (Meshless methods in CFD applications) has been completed. The project\nis in usable state.\n","categories":"","description":"The Docsy Hugo theme lets project maintainers and contributors focus on content, not on reinventing a website infrastructure from scratch; Hyde generates that content automatically for you from your code base!\n","excerpt":"The Docsy Hugo theme lets project maintainers and contributors focus …","ref":"/blog/2023/08/19/easy-api-documentation-with-hugo-and-hyde/","tags":"","title":"Easy API documentation with Hugo and Hyde"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/docs/","tags":"","title":"docs"},{"body":" This is a placeholder page. Replace it with your own content.\nText can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).\nThere should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.\n90’s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps kale chips.\nThere should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\nFirst Header 2 This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier craft beer. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven’t heard of them copper mug, crucifix green juice vape single-origin coffee brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!\nDeae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nScenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR\u0026B. I love this life we live in.\nSecond Header 2 This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nHeader 3 This is a code block following a header. Next level leggings before they sold out, PBR\u0026B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.\nHeader 4 This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header. Header 5 This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header. Header 6 What Follows A table A header A table A header A table A header There’s a horizontal rule above and below this.\nHere is an unordered list:\nLiverpool F.C. Chelsea F.C. Manchester United F.C. And an ordered list:\nMichael Brecker Seamus Blake Branford Marsalis And an unordered task list:\nCreate a Hugo theme Add task lists to it Take a vacation And a “mixed” task list:\nPack bags ? Travel! And a nested list:\nJackson 5 Michael Tito Jackie Marlon Jermaine TMNT Leonardo Michelangelo Donatello Raphael Definition lists can be used with Markdown syntax. Definition headers are bold.\nName Godzilla Born 1952 Birthplace Japan Color Green Tables should have bold headings and alternating shaded rows.\nArtist Album Year Michael Jackson Thriller 1982 Prince Purple Rain 1984 Beastie Boys License to Ill 1986 If a table is too wide, it should scroll horizontally.\nArtist Album Year Label Awards Songs Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin’ Somethin’, Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let’s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I’m a Star, Purple Rain Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026 Stealin, The New Style, She’s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill Code snippets like var foo = \"bar\"; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \"bar\"; bar := \"foo\"; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \"bar\";` lexer := lexers.Get(\"javascript\") iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\"github\") formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\nLanguage Code Javascript var foo = \"bar\"; Ruby foo = \"bar\"{ Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nThe photo above of the Spruce Picea abies shoot with foliage buds: Bjørn Erik Pedersen, CC-BY-SA.\nComponents Alerts This is an alert. Note This is an alert with a title. Note This is an alert with a title and Markdown. This is a successful alert. This is a warning. Warning This is a warning with a title. Another Heading Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nThis Document Inguina genus: Anaphen post: lingua violente voce suae meus aetate diversi. Orbis unam nec flammaeque status deam Silenum erat et a ferrea. Excitus rigidum ait: vestro et Herculis convicia: nitidae deseruit coniuge Proteaque adiciam eripitur? Sitim noceat signa probat quidem. Sua longis fugatis quidem genae.\nPixel Count Tilde photo booth wayfarers cliche lomo intelligentsia man braid kombucha vaporware farm-to-table mixtape portland. PBR\u0026B pickled cornhole ugh try-hard ethical subway tile. Fixie paleo intelligentsia pabst. Ennui waistcoat vinyl gochujang. Poutine salvia authentic affogato, chambray lumbersexual shabby chic.\nContact Info Plaid hell of cred microdosing, succulents tilde pour-over. Offal shabby chic 3 wolf moon blue bottle raw denim normcore poutine pork belly.\nExternal Links Stumptown PBR\u0026B keytar plaid street art, forage XOXO pitchfork selvage affogato green juice listicle pickled everyday carry hashtag. Organic sustainable letterpress sartorial scenester intelligentsia swag bushwick. Put a bird on it stumptown neutra locavore. IPhone typewriter messenger bag narwhal. Ennui cold-pressed seitan flannel keytar, single-origin coffee adaptogen occupy yuccie williamsburg chillwave shoreditch forage waistcoat.\nThis is the final element on the page and there should be no margin below this. ","categories":["Examples"],"description":"A short lead description about this content page. It can be **bold** or _italic_ and can be split over multiple paragraphs.\n","excerpt":"A short lead description about this content page. It can be **bold** …","ref":"/docs/getting-started/example-page/","tags":["sample","docs"],"title":"Example Page"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/examples/","tags":"","title":"Examples"},{"body":"This Hugo template can be used as a template to spin off new websites. Currently, I see\nno need to create releases. Just fork and clone the main branch!\n","categories":"","description":"No release policies\n","excerpt":"No release policies\n","ref":"/blog/2023/08/19/no-releases/","tags":"","title":"No Releases?"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/sample/","tags":"","title":"sample"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/dependency/","tags":"","title":"dependency"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/documentation/","tags":"","title":"documentation"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/git/","tags":"","title":"git"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/hyde/","tags":"","title":"hyde"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/meshfreefoam/","tags":"","title":"meshfreeFoam"},{"body":"This means the documentation software could not infer the contributor from the header and\nsource files. This is fine for external libraries (e.g. OpenFOAM functions) but we shouldn’t\nhave many of our own entities here!\nComment your classes and functions with the following to assign two contributors:\n/// @hyde-owner contributor1 /// @hyde-owner contributor2 class Test; Otherwise please use git to fetch commit authors for the file:\ngit shortlog -n -s -- path/to/file Here is a full list of all code entities which have no contributor assigned:\n","categories":"","description":"","excerpt":"This means the documentation software could not infer the contributor …","ref":"/contributors/__missing__/","tags":"","title":"\u003cMissing\u003e"},{"body":"This means the documentation software could not infer the contributor from the header and\nsource files. This is not fine as we strive to document everything.\nComment your classes and functions with the following to assign a contributor:\n/// @hyde-owner contributor1 class Test; Otherwise please use git to fetch commit authors for the file and blame for the\nspecific set of lines:\ngit shortlog -n -s -- path/to/file ","categories":"","description":"","excerpt":"This means the documentation software could not infer the contributor …","ref":"/contributors/__optional__/","tags":"","title":"\u003cOptional\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/adddictionaryconstructo.9efe096/m_~adddictionaryconstructortotable3cbasicshapetype3e/","tags":"","title":"~adddictionaryConstructorToTable\u003cbasicShapeType\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/addremovabledictionaryc.e0a8f39f/m_~addremovabledictionaryconstructortotable3cbasicshapetype3e/","tags":"","title":"~addRemovabledictionaryConstructorToTable\u003cbasicShapeType\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_~basicshape3cdim3e/","tags":"","title":"~basicShape\u003cDim\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/m_~nanoflannkdtree3cn3e/","tags":"","title":"~nanoflannKDTree\u003cN\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/trisurfaceshape/trisurfaceshape.h/trisurfaceshape3cdim3e/m_~trisurfaceshape3cdim3e/","tags":"","title":"~triSurfaceShape\u003cDim\u003e"},{"body":" About APIDocs APIDocs is a sample site using the Docsy\nHugo theme and Hyde to generate stunning\nand actually useful documentation pages which stay up-to-date with minimal effort.\nIt’s for the lazy lots of us who write OpenFOAM code frequently and want to document it\nin a way that’s actually decent to look at and browse. Reading source code files is still\nbetter though…\nThree sections are natively supported; though there is nothing holding you back of adding more:\nAPI docs for the lazy As an alternative to the more boring Doxygen (but more feature rich), Hyde can generate API docs\nas Markdown files; and consecutive docs builds do not change the content you add in the markdown file.\nUp to C++14 syntax is supported. Inline comments are still considered as documentation but it’s not\nrecommended to fully rely on them. It’s always to keep important notes about the classes in dedicated\nmarkdown files (naturally with Latex support).\nWiki-like docs The same Markdown system is used also to generate pages for things like “Getting-Started” or\na “FAQ” from your markdown input.\nA Blog I usually like to keep track of how my projects evolve over time, and a DevLog is the best. By\nexposing this information to the world, someone is bound to benefit from it at some point!\n","categories":"","description":"","excerpt":" About APIDocs APIDocs is a sample site using the Docsy\nHugo theme and …","ref":"/about/","tags":"","title":"About APIDocs"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/adaptor3cderived3e/","tags":"","title":"adaptor\u003cDerived\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/adaptor3cderived3e/m_adaptor3cderived3e/","tags":"","title":"adaptor\u003cDerived\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/adaptor3ct3e/","tags":"","title":"adaptor\u003cT\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/adaptor3ct3e/m_adaptor3ct3e/","tags":"","title":"adaptor\u003cT\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/addaliasdictionaryconst.5fa7051a/","tags":"","title":"addAliasdictionaryConstructorToTable\u003cbasicShapeType\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/addaliasdictionaryconst.5fa7051a/m_addaliasdictionaryconstructortotable3cbasicshapetype3e/","tags":"","title":"addAliasdictionaryConstructorToTable\u003cbasicShapeType\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/adddictionaryconstructo.9efe096/","tags":"","title":"adddictionaryConstructorToTable\u003cbasicShapeType\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/adddictionaryconstructo.9efe096/m_adddictionaryconstructortotable3cbasicshapetype3e/","tags":"","title":"adddictionaryConstructorToTable\u003cbasicShapeType\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/adaptor3cderived3e/m_addpoint/","tags":"","title":"addPoint"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/addremovabledictionaryc.e0a8f39f/","tags":"","title":"addRemovabledictionaryConstructorToTable\u003cbasicShapeType\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/addremovabledictionaryc.e0a8f39f/m_addremovabledictionaryconstructortotable3cbasicshapetype3e/","tags":"","title":"addRemovabledictionaryConstructorToTable\u003cbasicShapeType\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api_namespaces/","tags":"","title":"Api_namespaces"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api_tags/","tags":"","title":"Api_tags"},{"body":" Welcome to APIDocs: Your template for documenting OpenFOAM libs Learn More Clone APIDocs provides a simple Hugo template for documentation static-websites tailored specifically\nto document OpenFOAM libraries!\nWhat promised is that running a single script will generate an up-to-date documentation\nof the code. You can version the docs as you version the OpenFOAM code!\nHere are the main dependencies (There are few more needed utilities like\njq and frontmatter):\nHugo We’re using Hugo to build the documentation site from Markdown files\nin a blink of an eye (Or faster?)!\nRead more …\nBear You libraries are built with Bear (as in bear -- wmake libso)\nto generate compilation databases.\nRead more …\nHyde Hyde picks up those database and builds the documentation for you!\nConsecutive builds do not touch your content.\nRead more …\n","categories":"","description":"","excerpt":" Welcome to APIDocs: Your template for documenting OpenFOAM libs Learn …","ref":"/","tags":"","title":"APIDocs"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/","tags":"","title":"basicShape"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/","tags":"","title":"basicShape.H"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/","tags":"","title":"basicShape\u003cDim\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_basicshape3cdim3e/","tags":"","title":"basicShape\u003cDim\u003e"},{"body":"This is the blog section. It has three categories: News, Discussions and Releases.\nFiles in these directories will be listed in reverse chronological order.\n","categories":"","description":"","excerpt":"This is the blog section. It has three categories: News, Discussions …","ref":"/blog/","tags":"","title":"Blog"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_boundarynames/","tags":"","title":"boundaryNames"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_boundingbox/","tags":"","title":"boundingBox"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/trisurfaceshape/trisurfaceshape.h/trisurfaceshape3cdim3e/m_boundingbox/","tags":"","title":"boundingBox"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/boundingboxreturn3c23e/","tags":"","title":"boundingBoxReturn\u003c2\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/boundingboxreturn3c33e/","tags":"","title":"boundingBoxReturn\u003c3\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api_tags/class/","tags":"","title":"class"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_clone/","tags":"","title":"clone"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/trisurfaceshape/trisurfaceshape.h/trisurfaceshape3cdim3e/m_clone/","tags":"","title":"clone"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_contains/","tags":"","title":"contains"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/trisurfaceshape/trisurfaceshape.h/trisurfaceshape3cdim3e/m_contains/","tags":"","title":"contains"},{"body":"","categories":"","description":"","excerpt":"","ref":"/contributors/","tags":"","title":"Contributors"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_dict/","tags":"","title":"dict"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_dictionaryconstructorcompattable/","tags":"","title":"dictionaryConstructorCompatTable"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_dictionaryconstructortable/","tags":"","title":"dictionaryConstructorTable"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_dictionaryconstructortableptr_construct/","tags":"","title":"dictionaryConstructorTablePtr_construct"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_discretizer/","tags":"","title":"discretizer"},{"body":"This is a namespace enclosing the meshfree developments under the Foam namespace.\nA few fun things to notice on this page:\nadd*ConstructorTable subclasses below define which classes are base models in RTS mechanisms. ","categories":"","description":"","excerpt":"This is a namespace enclosing the meshfree developments under the Foam …","ref":"/api_namespaces/foammff/","tags":"","title":"Foam::mff"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/m_hassomeneighbourswithinradius/","tags":"","title":"hasSomeNeighboursWithinRadius"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/adaptor3cderived3e/m_kdtree_get_bbox/","tags":"","title":"kdtree_get_bbox"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/adaptor3ct3e/m_kdtree_get_bbox/","tags":"","title":"kdtree_get_bbox"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/adaptor3cderived3e/m_kdtree_get_point_count/","tags":"","title":"kdtree_get_point_count"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/adaptor3ct3e/m_kdtree_get_point_count/","tags":"","title":"kdtree_get_point_count"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/adaptor3cderived3e/m_kdtree_get_pt/","tags":"","title":"kdtree_get_pt"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/adaptor3ct3e/m_kdtree_get_pt/","tags":"","title":"kdtree_get_pt"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/","tags":"","title":"kdTrees"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/m_knnsearch/","tags":"","title":"knnSearch"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api_tags/library/","tags":"","title":"library"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/","tags":"","title":"meshfree"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tests/meshfree/","tags":"","title":"meshfree"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/","tags":"","title":"MeshFreeFoam API"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api_tags/method/","tags":"","title":"method"},{"body":"Main developer of this toolkit: A CFD enthusiast with passion for software development.\n","categories":"","description":"","excerpt":"Main developer of this toolkit: A CFD enthusiast with passion for …","ref":"/contributors/elwardi/","tags":"","title":"Mohammed Elwardi Fadeli"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/","tags":"","title":"nanoflannKDTree"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3c23e/m_nanoflannkdtree/","tags":"","title":"nanoflannKDTree"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3c33e/m_nanoflannkdtree/","tags":"","title":"nanoflannKDTree"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tests/meshfree/nanoflannkdtreetests/","tags":"","title":"nanoflannKDTree"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/","tags":"","title":"nanoflannKDTree.H"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtrees.c/nanoflannkdtree3c23e/","tags":"","title":"nanoflannKDTree\u003c2\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtrees.c/nanoflannkdtree3c33e/","tags":"","title":"nanoflannKDTree\u003c3\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/","tags":"","title":"nanoflannKDTree\u003cN\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/m_nanoflannkdtree3cn3e/","tags":"","title":"nanoflannKDTree\u003cN\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3c23e/","tags":"","title":"nanoflannKDTree3C23E"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3c33e/","tags":"","title":"nanoflannKDTree3C33E"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtrees.c/","tags":"","title":"nanoflannKDTrees.C"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nelementshasher.h/nelementshash3ct3e/","tags":"","title":"nElementsHash\u003cT\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nelementshasher.h/","tags":"","title":"nElementsHasher.H"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/adddictionaryconstructo.9efe096/m_new/","tags":"","title":"New"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/addremovabledictionaryc.e0a8f39f/m_new/","tags":"","title":"New"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_new/","tags":"","title":"New"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nelementshasher.h/nelementshash3ct3e/m_operator2829/","tags":"","title":"operator()"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3c23e/m_operator3d/","tags":"","title":"operator="},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3c33e/m_operator3d/","tags":"","title":"operator="},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/m_operator3d/","tags":"","title":"operator="},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/adddictionaryconstructo.9efe096/m_operator3d/","tags":"","title":"operator="},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/addremovabledictionaryc.e0a8f39f/m_operator3d/","tags":"","title":"operator="},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_operator3d/","tags":"","title":"operator="},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3c23e/m_points/","tags":"","title":"points"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3c33e/m_points/","tags":"","title":"points"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/adaptor3cderived3e/m_points/","tags":"","title":"points"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/adaptor3ct3e/m_points/","tags":"","title":"points"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/m_points/","tags":"","title":"points"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_projectonboundary/","tags":"","title":"projectOnBoundary"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/trisurfaceshape/trisurfaceshape.h/trisurfaceshape3cdim3e/m_projectonboundary/","tags":"","title":"projectOnBoundary"},{"body":"","categories":"","description":"","excerpt":"","ref":"/search/","tags":"","title":"Search Results"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/","tags":"","title":"shapes"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api_tags/sourcefile/","tags":"","title":"sourcefile"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/trisurfaceshape/","tags":"","title":"triSurfaceShape"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tests/meshfree/trisurfaceshapetests/","tags":"","title":"triSurfaceShape"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/trisurfaceshape/trisurfaceshape.h/","tags":"","title":"triSurfaceShape.H"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/trisurfaceshape/trisurfaceshape.h/trisurfaceshape3cdim3e/","tags":"","title":"triSurfaceShape\u003cDim\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/trisurfaceshape/trisurfaceshape.h/trisurfaceshape3cdim3e/m_trisurfaceshape3cdim3e/","tags":"","title":"triSurfaceShape\u003cDim\u003e"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_type/","tags":"","title":"type"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/trisurfaceshape/trisurfaceshape.h/trisurfaceshape3cdim3e/m_type/","tags":"","title":"type"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/basicshape3cdim3e/m_typename_/","tags":"","title":"typeName_"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/trisurfaceshape/trisurfaceshape.h/trisurfaceshape3cdim3e/m_typename_/","tags":"","title":"typeName_"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tests/","tags":"","title":"Unit Tests"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/m_unsortedsearch/","tags":"","title":"unsortedSearch"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/kdtrees/nanoflannkdtree/nanoflannkdtree.h/nanoflannkdtree3cn3e/m_updateindex/","tags":"","title":"updateIndex"},{"body":"","categories":"","description":"","excerpt":"","ref":"/api/meshfree/shapes/basicshape/basicshape.h/volumediscretizer3cdim3e/","tags":"","title":"volumeDiscretizer\u003cDim\u003e"}]